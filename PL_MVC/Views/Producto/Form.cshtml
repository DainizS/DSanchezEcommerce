@model ML.Producto
@{
    ViewBag.Title = "Form";
    Layout = "~/Views/Shared/_Layout.cshtml";
}


<div class="container">
    <div class="row">
        <div class="col-md-12">
            <h5>PRODUCTOS</h5>
        </div>
    </div>

    <script src="~/Scripts/jquery-1.10.2.js" type="text/javascript"></script>
    <script src="~/Scripts/jquery-1.10.2.min.js" type="text/javascript"></script>
    <script src="~/Scripts/bootstrap.js"></script>
    <link href="~/Content/bootstrap.css" rel="stylesheet" />

    <div class="row">
        <div class="col-md-12">
            @using (Html.BeginForm("Form", "Producto", FormMethod.Post, new { enctype = "multipart/form-data" }))
            {
                <div class="form-horizontal">
                    <div class="form-group">
                        <div class="col-md-3">
                            @Html.LabelFor(model => model.IdProducto, "Id Producto", new { @class = "hidden" })
                            @Html.TextBoxFor(model => model.IdProducto, new { @class = "form-control hidden" })
                            @Html.ValidationMessageFor(model => model.IdProducto)
                        </div>
                    </div>
                    <div class="form-group">
                        <div class="col-md-3">
                            @Html.LabelFor(model => model.Nombre)
                            @Html.TextBoxFor(model => model.Nombre, new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.Nombre)
                        </div>
                    </div>
                    <div class="form-group">
                        <div class="col-md-3">


                            @Html.LabelFor(model => model.PrecioUnitario, "Precio Unitario")
                            @Html.TextBoxFor(model => model.PrecioUnitario, "{0:#.#}", new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.PrecioUnitario)
                        </div>
                    </div>
                    <div class="form-group">
                        <div class="col-md-3">
                            @Html.LabelFor(model => model.Stock)
                            @Html.TextBoxFor(model => model.Stock, "{0:#.#}", new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.Stock)
                        </div>
                    </div>
                    <div class="form-group">
                        <div class="col-md-3">
                            @Html.LabelFor(model => model.Proveedor.IdProveedor, "Proveedor")
                            @Html.DropDownListFor(model => model.Proveedor.IdProveedor, new SelectList(Model.Proveedor.Proveedores, "IdProveedor", "Nombre"), "seleccione un Proveedor", new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.Proveedor.IdProveedor)
                        </div>
                    </div>



                    @*//////////////////// TRABAJANDO CON DROP DOWN LIST ON CASCADE \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\*@
                    <div class="form-group">
                        <div class="col-md-3">

                            @*@Html.LabelFor(model => model.Departamento.Area.IdArea, "Area")*@
                            @*@Html.DropDownListFor(model => model.Departamento.Area.IdArea, new SelectList(Model.Departamento.Area.Areas, "IdArea", "Nombre"), "seleccione un area", new { @class = "form-control" })*@
                            @Html.LabelFor(model => model.Departamento.Area)
                            
                            @if (Model.Departamento.Area.Areas == null)
                            {
                                @Html.DropDownListFor(model => model.Departamento.Area.IdArea, new SelectList(string.Empty, "Value", "Text"), "seleccione un area", new {id ="Area", @class = "form-control" })
                            }
                            else
                            {
                               @Html.DropDownListFor(model => model.Departamento.Area.IdArea, new SelectList(Model.Departamento.Area.Areas, "IdArea", "Nombre"), "seleccione un area", new {id ="Area", @class = "form-control" })
                            }

                           
                            @*@Html.ValidationMessageFor(model => model.Departamento.Area)*@
                        </div>
                    </div>
                    <div class="form-group">
                        <div class="col-md-3">
                            @Html.LabelFor(model => model.Departamento)
                            @if (Model.Departamento.Departamentos == null)
                            {
                                @Html.DropDownListFor(model => model.Departamento.IdDepartamento, new SelectList(string.Empty, "Value", "Text"), "seleccione un departamento ", new { id = "Departamento", @class = "form-control" })
                            }
                            else
                            {
                                @Html.DropDownListFor(model => model.Departamento.IdDepartamento, new SelectList(Model.Departamento.Departamentos, "IdDepartamento", "Nombre"), "seleccione un departamento ", new { id = "Departamento", @class = "form-control" })
                            }
                            
                            @*@Html.ValidationMessageFor(model => model.Departamento.IdDepartamento)*@
                        </div>
                    </div>

                   







                    <div class="form-group">
                        <div class="col-md-3">
                            @Html.LabelFor(model => model.Descripcion)
                            @Html.TextBoxFor(model => model.Descripcion, new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.Descripcion)
                        </div>
                    </div>

                    @*///////////////    TRABAJANDO CON LA IMAGEN    \\\\\\\\\\\*@
                    <div class="form-group">
                        <div class="col-md-3">
                            @Html.LabelFor(model => model.Imagen)

                            @*////////////// PARA EJECUTAR UN SCRIP EN IMAGEN UTILIZAR onchange="readURL(this) \\\\\\\\\\\\\\\\\\\\\*@
                            <input type="file" name="imagendata" onchange="readURL(this);">
                            @if (Model.Imagen != null)
                            {

                                <img id="imagenpreview" src="data:image/jpeg;base64,@Convert.ToBase64String(Model.Imagen)" width="100" height="100" />


                            }
                            else
                            {
                                <img id="imagenpreview" src="~/content/sin-imagen.jpg" style=" height:150px; width:150px;" />

                            }

                            @Html.ValidationMessageFor(model => model.Imagen)
                        </div>

                    </div>
                    @*//////////// NO PERDER LA IMAGEN CUANDO SE SELECCIONE EDITAR \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\*@
                    @Html.HiddenFor(model => model.Imagen)


                    <div class="form-group">
                        <div class="col-md-3">
                            <input type="submit" value="Guardar" class="btn btn-success" />
                            @Html.ActionLink("Regresar", "GetAll", "Producto", htmlAttributes: new { @class = "btn btn-danger" })
                        </div>
                    </div>
                </div>
            }
        </div>
    </div>

    @*/////////// : SCRIP PARA PREVISUALIZAR LA IMAGEN A INSERTAR \\\\\\\\\\\\\\\*@
    <script type="text/javascript">
        function readURL(input) {
            if (input.files && input.files[0]) {
                var reader = new FileReader();

                reader.onload = function (e) {
        //////////////// # selector de id       . selector de clase  \\\\\\\\\\\\\\\\\\\\\\\
                    $('#imagenpreview').attr('src', e.target.result);
                };
                reader.readAsDataURL(input.files[0]);
            }
        }


    </script>



    @*/////////////// JSON DE LOS DEPARTAMENTOS QUE CONTIENE UN AREA \\\\\\\\\\\\\\\\\\\\\\\\\\\*@
    @Scripts.Render("~/bundles/jquery")
    <script type="text/javascript">
        $(document).ready(function () {


            $("#Area").change(function () {
                $("#Departamento").empty();
                $.ajax({
                    type: 'POST',
                    url: '@Url.Action("GetDepartamento")',
                    dataType: 'json',
                    data: { IdArea: $("#Area").val() },
                    success: function (departamentos) {
                        $.each(departamentos, function (i, departamentos) {
                            $("#Departamento").append('<option value="'
                                                       + departamentos.Value + '">'
                                                       + departamentos.Text + '</option>');
                        });
                    },
                    error: function (ex) {
                        alert('seleccione una opccion porfavor.' + ex);
                    }
                });
            });

        })

    </script>









</div>