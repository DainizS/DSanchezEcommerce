@model ML.Usuario

@{
    ViewBag.Title = "Form";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<div class="container">
    <div class="row">
        <div class="col-md-12">
            <h1>USUARIOS</h1>
        </div>
    </div>

    <script src="~/Scripts/jquery-1.10.2.js" type="text/javascript"></script>
    <script src="~/Scripts/jquery-1.10.2.min.js" type="text/javascript"></script>
    <script src="~/Scripts/bootstrap.js"></script>
    <link href="~/Content/bootstrap.css" rel="stylesheet" />

    <script src="https://ajax.googleapis.com/ajax/libs/jquery/1.6/jquery.min.js" type="text/javascript"></script>
    <script src="https://ajax.googleapis.com/ajax/libs/jqueryui/1.8/jquery-ui.min.js" type="text/javascript"></script>
    <link href="https://ajax.googleapis.com/ajax/libs/jqueryui/1.8/themes/base/jquery-ui.css" rel="Stylesheet" type="text/css" />

   



    <div class="row">
        <div class="col-md-6 col-sm-6 col-xs-12">
            @using (Html.BeginForm("Form", "Usuario", FormMethod.Post, new { enctype = "multipart/form-data" }))
            {
                <div class="form-horizontal">
                    <div class="form-group">
                        <div class="col-md-6 col-sm-12 col-xs-12">
                            @Html.LabelFor(model => model.IdUsuario, "Id Usuario", new { @class = "hidden" })
                            @Html.TextBoxFor(model => model.IdUsuario, new { @class = "form-control hidden" })
                            @Html.ValidationMessageFor(model => model.IdUsuario)
                        </div>
                    </div>
                    <div class="form-group">
                        <div class="col-md-6 col-sm-12 col-xs-12">
                            @Html.LabelFor(model => model.UserName)
                            @Html.TextBoxFor(model => model.UserName, new { @class = "form-control", @id = "txtEmail", @onblur = "Email()" })
                            <label id="lblError" style="color:red"></label>
                            @Html.ValidationMessageFor(model => model.UserName)

                        </div>
                    </div>
                    <div class="form-group">
                        <div class="col-md-6 col-sm-12 col-xs-12">


                            @Html.LabelFor(model => model.Password, "Pasword")
                            @Html.TextBoxFor(model => model.Password, "{0:#.#}", new { @class = "form-control", @type = "password", @id = "txtPassword" })
                            @Html.ValidationMessageFor(model => model.Password)
                        </div>
                    </div>

                    @*/// Machear contraseña////*@
                    <div class="form-group">
                        <div class="col-md-6 col-sm-6 col-xs-12">
                            <label>confirme contraseña</label>
                            <input class="form-control" id="txtPasswordM" type="password" onkeyup="MacheoContraseña()" />

                        </div>
                    </div>


                    <div class="form-group">
                        <div class="col-md-6 col-sm-6 col-xs-12">
                            @Html.LabelFor(model => model.Nombre)
                            @Html.TextBoxFor(model => model.Nombre, new { @class = "form-control", @id = "txtNombre", @onkeypress = "return SoloLetras(event)" })
                            <label id="lblErrorLN" style="color:red"></label>
                            @Html.ValidationMessageFor(model => model.Nombre)
                        </div>
                    </div>
                    <div class="form-group">
                        <div class="col-md-6 col-sm-6 col-xs-12">
                            @Html.LabelFor(model => model.ApellidoPaterno)
                            @Html.TextBoxFor(model => model.ApellidoPaterno, new { @class = "form-control", @id = "txtApellidoPaterno", @onkeypress = "return SoloLetras(event)" })
                            <label id="lblErrorLAP" style="color:red"></label>
                            @Html.ValidationMessageFor(model => model.ApellidoPaterno)
                        </div>
                    </div>
                    <div class="form-group">
                        <div class="col-md-6 col-sm-6 col-xs-12">
                            @Html.LabelFor(model => model.ApellidoMaterno)
                            @Html.TextBoxFor(model => model.ApellidoMaterno, new { @class = "form-control", @id = "txtApellidoMaterno", @onkeypress = "return SoloLetras(event)" })
                            <label id="lblErrorLAM" style="color:red"></label>
                            @Html.ValidationMessageFor(model => model.ApellidoMaterno)
                        </div>
                    </div>
                    <div class="form-group ">
                        <div class="col-md-6 col-sm-6 col-xs-12">
                            @Html.LabelFor(model => model.FechaNacimiento)
                            <div class="form-inline">
                                @Html.TextBoxFor(model => model.FechaNacimiento, new { @class = "form-control", @id = "txtFechaNacimiento" })
                                @Html.ValidationMessageFor(model => model.FechaNacimiento)
                            </div>
                            
                          
                           





                        </div>
                    </div>
                    <div class="form-group">
                        <div class="col-md-6 col-sm-6 col-xs-12">
                            @Html.LabelFor(model => model.Sexo)
                        </div>
                    </div>
                    <div class="form-group">
                        <div class="col-md-6 col-sm-6 col-xs-12">

                            @Html.LabelFor(model => model.Sexo, "Masculino")

                            @Html.RadioButtonFor(model => model.Sexo, "M")

                            @Html.LabelFor(model => model.Sexo, "Femenino")
                            @Html.RadioButtonFor(model => model.Sexo, "F"@*, new { @Class = "radio" }*@)
                            @Html.ValidationMessageFor(model => model.Sexo)
                        </div>
                    </div>
                    <div class="form-group">
                        <div class="col-md-6 col-sm-6 col-xs-12">
                            @Html.LabelFor(model => model.Telefono)
                            @Html.TextBoxFor(model => model.Telefono, new { @class = "form-control", @onkeypress = "return SoloNumeros(event)" })
                            <label id="lblErrorN" style="color:red"></label>
                            @Html.ValidationMessageFor(model => model.Telefono)
                        </div>
                    </div>

                    <div class="form-group">
                        <div class="col-md-6 col-sm-6 col-xs-12">
                            @Html.LabelFor(model => model.Rol.IdRol, "Rol")
                            @Html.DropDownListFor(model => model.Rol.IdRol, new SelectList(Model.Rol.Roles, "IdRol", "Nombre"), "seleccione un Rol", new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.Rol.IdRol)
                        </div>
                    </div>
                  

                    <div class="form-group">
                        <div class="col-md-6 col-sm-6 col-xs-12">
                            <input type="submit" value="Guardar" class="btn btn-success" />
                            @Html.ActionLink("Regresar", "GetAll", "Usuario", htmlAttributes: new { @class = "btn btn-danger" })
                        </div>
                    </div>
                </div>
                
            }
        </div>
        
        
        <div class="col-md-6">
            <div class="form-horizontal">
                <div class="form-group ">
                    <div class="col-md-3 ">
                        @Html.LabelFor(model => model.Imagen)

                        @*////////////// PARA EJECUTAR UN SCRIP EN IMAGEN UTILIZAR onchange="readURL(this) \\\\\\\\\\\\\\\\\\\\\*@
                        <input type="file" name="imagendata" onchange="readURL(this);">
                        @if (Model.Imagen != null)
                        {

                            <img id="imagenpreview" src="data:image/jpeg;base64,@Convert.ToBase64String(Model.Imagen)" width="100" height="100" />


                        }
                        else
                        {
                            <img id="imagenpreview" src="~/content/sin-imagen.jpg" style=" height:150px; width:150px;" />

                        }

                        @Html.ValidationMessageFor(model => model.Imagen)
                    </div>

                </div>
                @*//////////// NO PERDER LA IMAGEN CUANDO SE SELECCIONE EDITAR \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\*@
                @Html.HiddenFor(model => model.Imagen)
            </div>
        </div>
            
    </div>

    <script type="text/javascript">
        var j = jQuery.noConflict();
        

    j(function () {
        j("#txtFechaNacimiento").datepicker({
            dateFormat: 'dd-mm-yy',
            showOn: 'button',
            buttonImage: "http://jqueryui.com/resources/demos/datepicker/images/calendar.gif",
            
            buttonImageOnly: true,
            changeMonth: true,
            changeYear: true

        });

    });
    
    </script>
        <script type="text/javascript">
            function MacheoContraseña() {
                var password = $("#txtPassword").val();
                var passwordM = $("#txtPasswordM").val();
                var confirmacion;
                if (passwordM == password) {

                    confirmacion = true;

                }
                else {
                    confirmacion = false;

                }

                if (confirmacion) {
                    $("#txtPasswordM").css("border-color", "green");
                }
                else {

                    $("#txtPasswordM").css("border-color", "red");
                }


            }





        </script>





        @*/////////// : SCRIP PARA BERIFICAR QUE ESE ESTEN INGRESANDO SOLO LETRAS EN EL NOMBRE \\\\\\\\\\\\\\\*@
        <script type="text/javascript">

            function SoloLetras(e) {
                var key = e.keyCode || e.which;
                var id = e.target.id;
                var letra = String.fromCharCode(key).toLowerCase();
                var caracter = e.key;
                var expr = /^[a-zA-Z]*$/g;
                if (!expr.test(letra)) {
                    if (id == "txtNombre") {
                        document.getElementById("lblErrorLN").innerHTML = "solo letras";
                    }
                    else if (id == "txtApellidoPaterno") {
                        document.getElementById("lblErrorLAP").innerHTML = "solo letras";
                    }
                    else if (id == "txtApellidoMaterno") {
                        document.getElementById("lblErrorLAM").innerHTML = "solo letras";
                    }
                    return false;
                } else {
                    if (id == "txtNombre") {
                        document.getElementById("lblErrorLN").innerHTML = "";
                    }
                    else if (id == "txtApellidoPaterno") {
                        document.getElementById("lblErrorLAP").innerHTML = "";
                    }
                    else if (id == "txtApellidoMaterno") {
                        document.getElementById("lblErrorLAM").innerHTML = "";
                    }
                    
                    return true;
                }

            }



        </script>

        <script type="text/javascript">

            function SoloNumeros(e) {
                var key = e.keyCode || e.which;
                var letra = String.fromCharCode(key).toLowerCase();
                var caracter = e.key;
                var expr = /^[0-9]*$/g;
                if (!expr.test(letra)) {
                   
                    $("lblErrorN").css("color","red");
                    document.getElementById("lblErrorN").innerHTML = "solo numeros";
                    return false;
                } else {
                    document.getElementById("lblErrorN").innerHTML = "";
                    return true;
                }

            }



        </script>

        <script type="text/javascript">

            function Email() {
                //var email = document.getElementById("txtEmail").value;
                var email = $("#txtEmail").val();
                var lblError = $("#lblError").val();
                var expr = /^([a-zA-Z0-9_\.\-])+@@(([a-zA-Z0-9\-])+\.)+([a-zA-Z0-9]{2,4})+$/;

                //return expr.test(email) ? alert("correo valido") : alert("correo invalido");

                if (expr.test(email)) {
                    document.getElementById("lblError").innerHTML = "";
                    $("#txtEmail").css("border-color", "green");
                    //$("#lblError").val("correo valido")  ;
                }
                else {
                    document.getElementById("lblError").innerHTML = "correo invalido";
                    
                    $("#txtEmail").css("border-color", "red");
                    //$("#lblError").val("correo invalido");
                }



            }



        </script>





 








</div>
